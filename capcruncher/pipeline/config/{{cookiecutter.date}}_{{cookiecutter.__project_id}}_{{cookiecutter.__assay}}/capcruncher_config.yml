version: "{{cookiecutter.__version}}"

###################################
# Essential configuration options #
###################################

analysis:

    # Method to use for data analysis, choose from capture | tri | tiled.
    # (Required)
    method: "{{cookiecutter.__assay}}"

    # Path to viewpoints used for analysis.
    # This is a bed file containing the coordinates of the captured restricion fragments.
    # The file must be in four column bed format with the name in the last column.
    # (Required)
    viewpoints: "{{cookiecutter.viewpoints}}"

    # Restriction enzyme name or recognition site, *not* case sensitive
    # e.g. DpnII | dpnii | GATC
    # (Required)
    restriction_enzyme: "{{cookiecutter.restriction_enzyme}}"

    # Number of basepairs to exclude around each capture probe to remove re-ligations
    # (Required)
    reporter_exclusion_zone: 1000

    # Path to design matrix describing the experimental design.
    # This must have two columns: sample    condition
    # e.g. sample   condition
    #      SAMPLE1  DMSO
    #      SAMPLE2  DMSO
    # If this is not provided, pattern matching will be used to determine the experimental design.
    # In this case ensure that your FASTQ file names follow the pattern: SAMPLE-NAME-WITH-CONDITION_REPLICATE_[12].fastq(.gz).
    # (Optional)
    design: "{{cookiecutter.design}}"

    # Genomic window size(s) (use spaces to separate bin sizes) to use for binning restriction fragment interaction counts
    # into even genomic windows. Only bin sizes that are present here will be allowed
    # to be used for heatmap generation.
    # (Optional) Leave blank to prevent binning
    {% set genomic_bin_size = cookiecutter.genomic_bin_size.split(' ') %}
    bin_sizes:
        {%- for bin in genomic_bin_size %}
        - {{bin}}
        {%- endfor %}
    
    # Determines if the pipeline will generate FASTQ files with the filtered reads. This is useful for running other pipelines
    # such as HiCUP or HiC-Pro or CHiCAGO.
    regenerate_fastq: "{{cookiecutter.regenerate_fastq}}"

genome:

    # Name of genome. UCSC genome names are prefered. Custom names are accepted if chrom_sizes are provided
    # (Required)
    name: "{{cookiecutter.genome}}"

    # Path to fasta file containing entire genome sequence separated by chromosome.
    # (Required)
    fasta: "{{cookiecutter.genome_fasta}}"

    # Path to indicies for the specified aligner (default = bowtie2)
    # Note: Do not include .Number|rev.bt2
    # e.g. /databank/igenomes/Homo_sapiens/UCSC/hg19/Sequence/Bowtie2Index/genome
    # (Required)
    aligner_index: "{{cookiecutter.genome_indicies}}"

    # Path to chromosome sizes for genome.
    # If blank will be determined automatically from the genome (must be a UCSC genome)
    # This should be a two column tsv file with columns: chromosome_name    size
    # FAI files can also be used.
    # (Optional)
    chrom_sizes: "{{cookiecutter.genome_chromosome_sizes}}"

    # Determines if this is a custom genome. Only needed for UCSC hub generation.
    # (Optional)
    custom: {%- if cookiecutter.is_custom_genome == "no" %} False {%- else %} True {%- endif %}

    # Organism name e.g. Mus Musculus. Only needed for UCSC hub using a custom genome.
    # (Optional)
    organism: "{{cookiecutter.genome_organism}}"

    # Path to twobit file for genome. Only needed for UCSC hub using a custom genome.
    # (Optional)
    twobit: "{{cookiecutter.genome_two_bit}}"

hub:

    # Determines if hub is created or not.
    # True|False
    # (Required)
    create: "{{cookiecutter.make_ucsc_hub}}"

    # Url/IP of server to host bigWigs
    # e.g. http://userweb.molbiol.ox.ac.uk/
    # (Required for hub)
    url: URL_TO_HOST_BIGWIGS

    # Location of publically accessible location on the server
    # The directory will be created if it does not exist
    # (Required for hub)
    dir: "{{cookiecutter.ucsc_hub_directory}}"

    # Name for the hub
    # (Required for hub)
    name: "{{cookiecutter.ucsc_hub_name}}"

    # Short hub name
    # (Optional for hub)
    short: "{{cookiecutter.ucsc_hub_name}}"

    # Long hub name
    # (Optional for hub)
    long: "{{cookiecutter.ucsc_hub_name}}"

    # Email address
    # (Required for hub)
    email: "{{cookiecutter.ucsc_hub_email}}"

###################################
# Optional configuration options #
###################################

plot:

    # Determines if plots are created or not.
    create: {%- if cookiecutter.make_plots == "no" %} False {%- else %} True {%- endif %}

    # Path to a bed file containing coordinates for regions to plot .
    # Must be named and the interval name must contain the viewpoint to be plotted.
    # e.g. chr1 1000    2000    VIEWPOINT-A_PLOT-NAME
    # (Required for plotting)
    coordinates: "{{cookiecutter.plotting_coordinates}}"

    # Normalisation method to use for the plot. Leave blank for default based on analysis method.
    # Choose from:
    # * raw - No normalisation
    # * n_interactions - Normalised based on the number of cis interactions
    # * n_rf_n_interactions - Normalised based on the number of cis interations and the number of restriction fragments per bin
    # * ice - Iterative correction and eigenvector decomposition (ICE) normalisation.
    # * icen - ICE normalisation followed by correction for the number of cis interactions.
    # (Required for plotting)
    normalisation: "{{cookiecutter.plotting_normalisation}}"

    # Plot genes using a bed12 formatted file (capcruncher utilities gtf_to_bed12 can be used to generate this).
    # (Optional)
    genes: PATH_TO_GENES_IN_BED12_FORMAT


align:

    # Aligner to use. Both bowtie and bowtie2 are supported but bowtie2 is prefered.
    # (Required)
    aligner: bowtie2

    # Flag to specify index for the aligner. Leave blank if this is not present i.e. bowtie
    # (Required)
    index_flag: -x

    # Aligner specific options. (Take care as this will ignore the number of cores specified earlier).
    # (Optional)
    options: -p 6 --very-sensitive

analysis_optional:

    # Path to a YAML file containing the filter order to be applied to slices.
    # See https://github.com/sims-lab/CapCruncher/blob/master/capcruncher/data/test/ccslicefilter_test.yml
    # for an example and the filter module of the documentation
    # https://capcruncher.readthedocs.io/en/latest/capcruncher_module_documentation/capcruncher.tools.html#capcruncher-tools-filter-module
    # for further details.
    custom_filtering: PATH_TO_CUSTOM_FILTERING_CONFIG

    # Path to blacklisted regions bed file. Must be a four column named bed file.
    # Can supply any regions to be removed.
    # (Optional)
    blacklist: "{{cookiecutter.blacklist}}"

    # Attempts to prevent cis slices from being removed during annotation
    # (Optional)
    prioritize_cis_slices: {%- if cookiecutter.is_custom_genome == "no" %} False {%- else %} True {%- endif %}

    # Attempts to prevent slices on specified chromosomes being removed during annotation
    # Choose from:
    # None - No priority
    # Comma separated list e.g. chr1,chr2 to directly specify chromosomes
    # viewpoints - Uses the supplied viewpoints to define priority chromosomes
    # (Optional)
    priority_chromosomes: None


normalisation:

    # Scaling factor for normalisation.
    # Current normalisation formula:
    # (REPORTER_COUNT / N_CIS_REPORTERS) * SCALE_FACTOR
    # (Required)
    scale_factor: 1000000

    # Regions to use for normalising viewpoint pileups.
    # To use this method, provide the path to a bed file with the inverval(s)
    # to be used for normalising *each* viewpoint. All viewpoints must have at least
    # one region specified.
    regions: REGIONS_FOR_NORM

trim:

    # Options passed to trim_galore
    # (Optional)
    options: --length 21

split:

    # Fastq files are split for parallel processing. Defines number of reads per fastq file (lower = more files to process)
    # For Tiled-C or highly enriched assays it is advised to reduce this to 1x10^6 readpairs to speed up the analysis.
    # The pipeline will cope with a high number of reads but it will run slower.
    # (Optional)
    n_reads: 1000000

compare:
    # Method(s) to summarise replicate reporter counts for between sample comparisons.
    # These must be provided as a comma or tab separated list of summary functions
    # Note: The function name must be a numpy function
    # e.g.  mean,sum,median
    # (Optional)
    summary_methods: mean

differential:
    # Column in the design matrix to use for comparisons.
    # (Optional)
    contrast: {{cookiecutter.differential_contrast}}

    # Distance from the viewpoint to use for differential analysis.
    # (Optional)
    distance: 100000
