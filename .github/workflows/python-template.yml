name: Python package

on: [push]

env:
  CACHE_NUMBER: 0

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install OS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev


    - name: Restore bowtie2 cache
      uses: actions/cache@v2
      with:
          path: tests/data/data_for_pipeline_run/chr14_bowtie2_indicies/
          key: ${{ hashFiles('tests/data/data_for_pipeline_run/chr14.fa.gz') }}-${{ env.CACHE_NUMBER }}
      id: bowtie2_cache

    - name: Set up conda using miniforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: environment.yml
        miniforge-version: latest
        miniforge-variant: Mambaforge
        python-version: ${{ matrix.python-version }}
        use-mamba: true

    - name: Install testing dependencies
      shell: bash -l {0}
      run: |
        mamba env update -n test -f testing.yml

    - name: Check installed packages
      shell: bash -l {0}
      run: |
        mamba info

    - name: Install the package
      shell: bash -l {0}
      run: |
        pip install .[plotting]

    - name: Test with pytest and generate report
      shell: bash -l {0}
      run: |
        pytest -vv -s --log-cli-level debug --cov=./ --cov-report=xml

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        verbose: true # optional (default = false)
