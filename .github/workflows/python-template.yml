name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        include:
        - prefix: /usr/share/miniconda/envs/test

    steps:
      
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}   
    
    - name: Install dependencies
      run: |
        sudo apt install libcurl4-openssl-dev
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Restore conda cache
      uses: actions/cache@v2
      with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.CACHE_NUMBER }}
      id: conda_cache
    
    - name: Restore bowtie2 cache
      uses: actions/cache@v2
      with:
          path: /home/runner/work/CapCruncher/CapCruncher/tests/data/data_for_pipeline_run/chr14_bowtie2_indicies/
          key: ${{ matrix.label }}-${{ hashFiles('/home/runner/work/CapCruncher/CapCruncher/tests/data/data_for_pipeline_run/chr14.fa.gz') }}-${{ env.CACHE_NUMBER }}
      id: bowtie2_cache

    - name: Install package dependencies
      uses: conda-incubator/setup-miniconda@v2
      if: steps.conda_cache.outputs.cache-hit != 'true'
      with:
        mamba-version: "*"
        channels: conda-forge,bioconda,defaults
        channel-priority: true
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
      
    - name: Update environment 
      shell: bash -l {0}
      if: steps.conda_cache.outputs.cache-hit != 'true'
      run: |
        mamba env update -n test -f environment.yml

    - name: Install testing dependencies
      shell: bash -l {0}
      if: steps.conda_cache.outputs.cache-hit != 'true'
      run: |
        mamba env update -n test -f testing.yml

    - name: Conda info
      shell: bash -l {0}
      run: |
        mamba info

    - name: Install the package
      shell: bash -l {0}
      run: |
        pip install -e .[plotting]

    - name: Test with pytest and generate report
      shell: pwsh
      run: |
        pytest -vv -s --log-cli-level debug --cov=./ --cov-report=xml

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        verbose: true # optional (default = false)
